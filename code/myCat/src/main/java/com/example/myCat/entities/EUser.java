package com.example.myCat.entities;
// Generated 2018-6-8 0:41:39 by Hibernate Tools 5.2.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * EUser generated by hbm2java
 */
@Entity
@Table(name = "e_user", catalog = "spring_boot")
public class EUser implements java.io.Serializable {

	private Integer id;
	private UserGroup userGroup;
	private String uid;
	private String pass;
	private String name;
	private String text;
	private String createDate;
	private String modifyDate;
	private String lastLoginDate;
	private String phone;
	private String qq;
	private String email;
	private String sex;
	private Integer loginCount;
	private Integer isFocus;
	private String befrom;
	private String wechatId;
	private Set<EVblog> EVblogs = new HashSet<EVblog>(0);
	private Set<EUserCatRef> EUserCatRefs = new HashSet<EUserCatRef>(0);
	private Set<SecretMessage> secretMessagesForSendId = new HashSet<SecretMessage>(0);
	private Set<EComment> EComments = new HashSet<EComment>(0);
	private Set<EUpvote> EUpvotes = new HashSet<EUpvote>(0);
	private Set<EInformation> EInformations = new HashSet<EInformation>(0);
	private Set<SecretMessage> secretMessagesForReceiveId = new HashSet<SecretMessage>(0);
	private Set<UserAttention> userAttentionsForAttentionId = new HashSet<UserAttention>(0);
	private Set<UserAttention> userAttentionsForUserId = new HashSet<UserAttention>(0);

	public EUser() {
	}

	public EUser(UserGroup userGroup, String uid, String pass, String name, String text, String createDate,
			String modifyDate, String lastLoginDate, String phone, String qq, String email, String sex,
			Integer loginCount, Integer isFocus, String befrom, String wechatId, Set<EVblog> EVblogs,
			Set<EUserCatRef> EUserCatRefs, Set<SecretMessage> secretMessagesForSendId, Set<EComment> EComments,
			Set<EUpvote> EUpvotes, Set<EInformation> EInformations, Set<SecretMessage> secretMessagesForReceiveId,
			Set<UserAttention> userAttentionsForAttentionId, Set<UserAttention> userAttentionsForUserId) {
		this.userGroup = userGroup;
		this.uid = uid;
		this.pass = pass;
		this.name = name;
		this.text = text;
		this.createDate = createDate;
		this.modifyDate = modifyDate;
		this.lastLoginDate = lastLoginDate;
		this.phone = phone;
		this.qq = qq;
		this.email = email;
		this.sex = sex;
		this.loginCount = loginCount;
		this.isFocus = isFocus;
		this.befrom = befrom;
		this.wechatId = wechatId;
		this.EVblogs = EVblogs;
		this.EUserCatRefs = EUserCatRefs;
		this.secretMessagesForSendId = secretMessagesForSendId;
		this.EComments = EComments;
		this.EUpvotes = EUpvotes;
		this.EInformations = EInformations;
		this.secretMessagesForReceiveId = secretMessagesForReceiveId;
		this.userAttentionsForAttentionId = userAttentionsForAttentionId;
		this.userAttentionsForUserId = userAttentionsForUserId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "group_id")
	public UserGroup getUserGroup() {
		return this.userGroup;
	}

	public void setUserGroup(UserGroup userGroup) {
		this.userGroup = userGroup;
	}

	@Column(name = "uid")
	public String getUid() {
		return this.uid;
	}

	public void setUid(String uid) {
		this.uid = uid;
	}

	@Column(name = "pass")
	public String getPass() {
		return this.pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	@Column(name = "name")
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "text", length = 50)
	public String getText() {
		return this.text;
	}

	public void setText(String text) {
		this.text = text;
	}

	@Column(name = "create_date", length = 14)
	public String getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(String createDate) {
		this.createDate = createDate;
	}

	@Column(name = "modify_date", length = 14)
	public String getModifyDate() {
		return this.modifyDate;
	}

	public void setModifyDate(String modifyDate) {
		this.modifyDate = modifyDate;
	}

	@Column(name = "last_login_date", length = 14)
	public String getLastLoginDate() {
		return this.lastLoginDate;
	}

	public void setLastLoginDate(String lastLoginDate) {
		this.lastLoginDate = lastLoginDate;
	}

	@Column(name = "phone")
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "qq")
	public String getQq() {
		return this.qq;
	}

	public void setQq(String qq) {
		this.qq = qq;
	}

	@Column(name = "email")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "sex")
	public String getSex() {
		return this.sex;
	}

	public void setSex(String sex) {
		this.sex = sex;
	}

	@Column(name = "login_count")
	public Integer getLoginCount() {
		return this.loginCount;
	}

	public void setLoginCount(Integer loginCount) {
		this.loginCount = loginCount;
	}

	@Column(name = "is_focus")
	public Integer getIsFocus() {
		return this.isFocus;
	}

	public void setIsFocus(Integer isFocus) {
		this.isFocus = isFocus;
	}

	@Column(name = "befrom")
	public String getBefrom() {
		return this.befrom;
	}

	public void setBefrom(String befrom) {
		this.befrom = befrom;
	}

	@Column(name = "wechat_id", length = 50)
	public String getWechatId() {
		return this.wechatId;
	}

	public void setWechatId(String wechatId) {
		this.wechatId = wechatId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUser")
	public Set<EVblog> getEVblogs() {
		return this.EVblogs;
	}

	public void setEVblogs(Set<EVblog> EVblogs) {
		this.EVblogs = EVblogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUser")
	public Set<EUserCatRef> getEUserCatRefs() {
		return this.EUserCatRefs;
	}

	public void setEUserCatRefs(Set<EUserCatRef> EUserCatRefs) {
		this.EUserCatRefs = EUserCatRefs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUserBySendId")
	public Set<SecretMessage> getSecretMessagesForSendId() {
		return this.secretMessagesForSendId;
	}

	public void setSecretMessagesForSendId(Set<SecretMessage> secretMessagesForSendId) {
		this.secretMessagesForSendId = secretMessagesForSendId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUser")
	public Set<EComment> getEComments() {
		return this.EComments;
	}

	public void setEComments(Set<EComment> EComments) {
		this.EComments = EComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUser")
	public Set<EUpvote> getEUpvotes() {
		return this.EUpvotes;
	}

	public void setEUpvotes(Set<EUpvote> EUpvotes) {
		this.EUpvotes = EUpvotes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUser")
	public Set<EInformation> getEInformations() {
		return this.EInformations;
	}

	public void setEInformations(Set<EInformation> EInformations) {
		this.EInformations = EInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUserByReceiveId")
	public Set<SecretMessage> getSecretMessagesForReceiveId() {
		return this.secretMessagesForReceiveId;
	}

	public void setSecretMessagesForReceiveId(Set<SecretMessage> secretMessagesForReceiveId) {
		this.secretMessagesForReceiveId = secretMessagesForReceiveId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUserByAttentionId")
	public Set<UserAttention> getUserAttentionsForAttentionId() {
		return this.userAttentionsForAttentionId;
	}

	public void setUserAttentionsForAttentionId(Set<UserAttention> userAttentionsForAttentionId) {
		this.userAttentionsForAttentionId = userAttentionsForAttentionId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "EUserByUserId")
	public Set<UserAttention> getUserAttentionsForUserId() {
		return this.userAttentionsForUserId;
	}

	public void setUserAttentionsForUserId(Set<UserAttention> userAttentionsForUserId) {
		this.userAttentionsForUserId = userAttentionsForUserId;
	}

}
